# Docker Compose Production Configuration
# This file provides production-specific configurations

version: '3.8'

services:
  # Production app configuration
  app:
    restart: always
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - LOG_LEVEL=error
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    # Production health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Production database configuration
  db:
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secure_password}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secure_password}
    volumes:
      - db_data_prod:/var/lib/mysql
      # Remove init scripts in production
    # Remove port exposure in production
    ports: []
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Production Redis configuration
  redis:
    restart: always
    # Add Redis configuration file
    volumes:
      - redis_data_prod:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Remove development services in production
  phpmyadmin:
    profiles:
      - dev

  node:
    profiles:
      - dev

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: sereno_system_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/ssl:/etc/nginx/ssl
      - ./public:/var/www/html/public
    depends_on:
      - app
    networks:
      - sereno_network
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: sereno_system_certbot
    volumes:
      - ./docker/ssl:/etc/letsencrypt
      - ./public:/var/www/html/public
    command: certonly --webroot --webroot-path=/var/www/html/public --email sk.shingo.10@gmail.com --agree-tos --no-eff-email -d your-domain.com
    profiles:
      - ssl

volumes:
  db_data_prod:
    driver: local
  redis_data_prod:
    driver: local

# Production-specific network configuration
networks:
  sereno_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16